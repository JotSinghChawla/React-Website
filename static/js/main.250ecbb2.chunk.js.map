{"version":3,"sources":["components/LoadingComponent.js","shared/baseURL.js","components/MenuComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/CommentFormComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["LoadingComponent","className","baseURL","Menu","props","console","log","menu","this","sentDishes","dishes","map","dish","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","isLoading","errorMessage","Breadcrumb","BreadcrumbItem","active","Component","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","postComment","dishId","rating","author","comment","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","type","ActionTypes","payload","addComment","catch","message","alert","addDishes","dishesLoading","dishesFailed","addComments","comments","commentsFailed","addPromos","promos","promosLoading","promosFailed","fetchLeaders","leaders","addLeaders","minLength","val","length","maxLength","CommentFormComponent","state","modal","showModal","bind","handleSubmit","setState","values","text","Button","outline","color","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","md","htmlFor","Col","select","model","value","placeholder","validators","show","messages","textarea","rows","defaultProps","DishdetailComponent","sentDish","errMess","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","ShowComments","element","Intl","DateTimeFormat","year","month","day","format","parse","inputDish","inputComments","HeaderComponent","useState","navOpen","setNavOpen","modalOpen","setModalOpen","username","setUsername","password","setPassword","remember","setRemember","toggleModal","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","event","preventDefault","FormGroup","Input","onChange","target","check","FooterComponent","href","HomeComponent","promotion","leader","dishesErrMess","promosErrMess","leadersLoading","leadersErrMess","RenderCard","item","designation","CardSubtitle","AboutComponent","RenderLeader","input","Media","left","middle","object","heading","CardHeader","title","list","required","len","isNumber","isNaN","Number","validEmail","test","ContactComponent","resetFeedbackForm","postFeedback","firstname","lastname","email","telnum","agree","contactType","role","size","offset","checkbox","Main","fetchDishes","fetchComments","fetchPromos","TransitionGroup","CSSTransition","classNames","timeout","location","path","component","filter","featured","promotions","exact","match","parseInt","params","commentsErrMess","key","withRouter","connect","newFeedback","actions","reset","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedback","composeWithDevTools","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.250ecbb2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst LoadingComponent = () => {\r\n    return (\r\n        <div className='col-12'>\r\n            <span className='fa fa-spinner fa-pulse fa-3x fa-fw text-primary'></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingComponent\r\n","export const baseURL = 'http://localhost:4000/';","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap'; \r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from './LoadingComponent'\r\nimport { baseURL } from '../shared/baseURL'\r\n\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"1. constructor is called\")\r\n    }\r\n    componentWillMount() {\r\n        console.log('2. componentWillMount is called')\r\n    }\r\n    componentDidMount() {\r\n        console.log(\"4. componentDidMount is called\")\r\n    }\r\n    componentDidUpdate() {\r\n        console.log('5. componentDidUpdate is called')\r\n    }\r\n\r\n    // renderDish(dish) {\r\n    //     if(dish!==null){\r\n    //         return(\r\n    //             <Card>\r\n    //                 <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n    //                 <CardBody>\r\n    //                     <CardTitle> {dish.name} </CardTitle>\r\n    //                     <CardText> {dish.description} </CardText>\r\n    //                 </CardBody>\r\n    //             </Card>\r\n    //         )\r\n    //     }\r\n    //     else{\r\n    //         return (\r\n    //             <div></div>\r\n    //         )\r\n    //     }\r\n    // }\r\n\r\n    // showComments(dish) {\r\n    //     return dish !== null ? <div>\r\n    //         <h3>Comments</h3>\r\n            \r\n    //     </div> : <div></div>\r\n    // }\r\n\r\n    render() {\r\n\r\n        console.log(\"3. render is called\")\r\n\r\n        const menu = this.props.sentDishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-2\">\r\n                    <Card>\r\n                        <Link to={ `/react_website/menu/${dish.id}` } >\r\n                            <CardImg width=\"100%\" src={baseURL + dish.image} alt={dish.name} />\r\n                            <CardImgOverlay>\r\n                                <CardTitle> {dish.name} </CardTitle>\r\n                            </CardImgOverlay>\r\n                        </Link>\r\n                    </Card>\r\n                </div> \r\n            );\r\n        });\r\n\r\n        if( this.props.sentDishes.isLoading) {\r\n            return(\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.props.sentDishes.errorMessage) {\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <h4>{this.props.sentDishes.errorMessage}</h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else \r\n        {\r\n            return (  \r\n                <div className=\"container\">\r\n                    <div className='row'>\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem> \r\n                                <Link to='/home'>Home</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active> \r\n                                Menu\r\n                            </BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className='col-12'>\r\n                            <h3>Menu </h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    } \r\n}\r\n\r\nexport default Menu;","export const ADD_COMMENT = 'ADD_COMMENT'\r\nexport const DISHES_LOADING = 'DISHES_LOADING'\r\nexport const DISHES_FAILED = 'DISHES_FAILED' \r\nexport const ADD_DISHES = 'ADD_DISHES'\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS'\r\n// COMMENTS_LOADING                     Will will be fetched in when we load our DishDetailComponent            \r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED'            \r\nexport const PROMOS_LOADING = 'PROMOS_LOADING'\r\nexport const ADD_PROMOS = 'ADD_PROMOS'\r\nexport const PROMOS_FAILED = 'PROMO_FAILED'\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING'\r\nexport const ADD_LEADERS = 'ADD_LEADERS' \r\nexport const LEADERS_FAILED = 'LEADERS_FAILED'","import * as ActionTypes from './ActionTypes'\r\nimport { baseURL } from '../shared/baseURL'\r\n\r\nexport const addComment = ( comment ) => ({\r\n        type: ActionTypes.ADD_COMMENT,\r\n        payload: comment\r\n})\r\n\r\nexport const postComment = ( dishId, rating, author, comment ) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating, \r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString()\r\n\r\n    return fetch( baseURL + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify( newComment ),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then( response => {\r\n        if( response.ok ) {\r\n            return response\r\n        }\r\n        else {\r\n            var error = new Error( 'Error ' + response.status + ': ' + response.statusText )\r\n            error.response = response\r\n            throw error\r\n        }\r\n    }, error => {\r\n    //    var errMess = new Error( error.message )\r\n    //    throw errMess \r\n        throw error\r\n    })\r\n    .then( response => response.json() )\r\n    .then( response => dispatch( addComment( response ) ) )\r\n    .catch( error => { \r\n        console.log( 'POST COMMENTS: ', error.message )\r\n        alert( 'Your comment is not posted\\nError: ',error.message )\r\n    } )\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true))\r\n\r\n    return fetch(baseURL + 'dishes')\r\n        .then( response => {\r\n            if( response.ok ) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error( 'Error ' + response.status + ': ' + response.statusText )\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n           var errMess = new Error( error.message )\r\n           throw errMess \r\n        })\r\n        .then( response => response.json() )\r\n        .then( dishes => dispatch( addDishes(dishes) ) )\r\n        .catch( error => dispatch( dishesFailed(error.message) ) )\r\n    // setTimeout( () => {\r\n    //     dispatch(addDishes(DISHES))\r\n    // }, 2000 )\r\n}\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n})\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n})\r\n\r\nexport const dishesFailed = (errorMessage) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch( baseURL + 'comments' )\r\n        .then( response => {\r\n            if( response.ok ) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error( 'Error '+ response.status + ': ' + response.statusText )\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error( error.message )\r\n            throw errMess\r\n        })\r\n        .then( response => response.json() )\r\n        .then( comments => dispatch(addComments(comments) ))\r\n        .catch( error => { dispatch( commentsFailed( error.message  ) ) } )\r\n}\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\nexport const commentsFailed = (errorMessage) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errorMessage\r\n})\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true))\r\n\r\n    return fetch(baseURL + 'promotions')\r\n        .then( response => {\r\n            if( response.ok ) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error( 'Error '+ response.status + ': ' + response.statusText )\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error( error.message )\r\n            throw errMess\r\n        })\r\n        .then( response => response.json() )\r\n        .then( promotions => dispatch( addPromos(promotions) ) )\r\n        .catch( error => dispatch( promosFailed(error.message) ) )\r\n}\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n})\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n})\r\n\r\nexport const promosFailed = (errorMessage) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n})\r\n\r\nexport const leadersFailed = ( errorMessage ) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true))\r\n\r\n    return fetch( baseURL + 'leaders')\r\n        .then( response => {\r\n            if( response.ok ) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error( 'Error ' + response.status + ': ' + response.statusText )\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error( error.message )\r\n            throw errMess\r\n        })\r\n        .then( response => response.json() )\r\n        .then( leaders => dispatch( addLeaders(leaders) ) )\r\n        .catch( error => dispatch( leadersFailed(error) ) )\r\n}\r\n\r\nexport const postFeedback = ( firstname, lastname, email, telnum, \r\n                            agree, contactType ,message) => () => {\r\n                const newFeedback = {\r\n                    firstname: firstname,\r\n                    lastname: lastname,\r\n                    email: email,\r\n                    telnum: telnum,\r\n                    agree: agree,\r\n                    contactType: contactType,\r\n                    message: message\r\n                }\r\n\r\n        return fetch( baseURL + 'feedback' , {\r\n            method: 'POST',\r\n            body: JSON.stringify( newFeedback ),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'same-origin'\r\n        })\r\n        .then( response => {\r\n            if(response.ok)\r\n                return response\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText )\r\n                error.response = response\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errMess = new Error( error.message )\r\n            throw errMess\r\n        })\r\n        .then( response => response.json() )\r\n        .then( response => { \r\n            console.log('Current State is: ' , response)\r\n            alert('Thank you for your feedback!\\n' + JSON.stringify(response) ) \r\n        })\r\n        .catch( error => {\r\n            console.log( 'POST FEEDBACK: ', error.message )\r\n            alert( 'Your Feedback is not posted\\nError: ',error.message )\r\n        })\r\n}","import React, { Component } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, Label, Row, Col } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\nimport { postComment } from '../redux/ActionCreators';\r\n\r\nconst minLength = (val) => val && (val.length >= 2)\r\nconst maxLength = (val) => !(val) || (val.length <= 15)\r\n\r\nexport class CommentFormComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            modal: false\r\n        }\r\n        this.showModal = this.showModal.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    showModal() {\r\n       this.setState({ modal: !this.state.modal })\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.showModal()\r\n        console.log(this.props.dishId)\r\n        this.props.postComment( this.props.dishId, values.rating, values.name, values.comment )\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n    const { text, postComment, dishId } = this.props\r\n        return (\r\n            <>\r\n                <Button outline color='secondary' onClick={ this.showModal}>\r\n                    <i className='fa fa-pencil fa-lg'>  {text} </i>\r\n                </Button>\r\n                <Modal isOpen={this.state.modal} toggle={ this.showModal }>\r\n                    <ModalHeader toggle={ this.showModal }>\r\n                        Submit Your Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={ (values) => this.handleSubmit(values) }>\r\n                            <Row className='form-group'>\r\n                                <Label md={12} htmlFor='ratings'> Ratings: </Label> \r\n                                <Col md={12}>\r\n                                    <Control.select model='.ratings' id='ratings'\r\n                                        className='form-control'>\r\n                                        <option value='1'>1</option>\r\n                                        <option value='2'>2</option>\r\n                                        <option value='3'>3</option>\r\n                                        <option value='4'>4</option>\r\n                                        <option value='5'>5</option>\r\n                                    </Control.select>        \r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label md={12} htmlFor='name'> Your Name: </Label> \r\n                                <Col md={12}>\r\n                                    <Control.text model='.name' id='name' name='name'\r\n                                        className='form-control'\r\n                                        placeholder='Enter Name'\r\n                                        validators={{\r\n                                            minLength, maxLength\r\n                                        }} />\r\n                                    <Errors className='text-danger' model='.name'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label md={12} htmlFor='comment'> Comment: </Label> \r\n                                <Col md={12}>\r\n                                    <Control.textarea rows='6' model='.comment' id='comment' name='comment'\r\n                                        placeholder='Enter your Comment here...'\r\n                                        className='form-control' />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={10}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nCommentFormComponent.defaultProps = {\r\n    text: 'Submit Comment'\r\n}\r\n\r\nexport default CommentFormComponent\r\n","import React from 'react'\r\nimport { Card, CardImg, CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport SubmitComment from './CommentFormComponent'\r\nimport { postComment } from '../redux/ActionCreators';\r\nimport Loading  from './LoadingComponent'\r\nimport { baseURL } from '../shared/baseURL'\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components'\r\n\r\nconst DishdetailComponent = ({ sentDish, comments, postComment, isLoading, errMess }) => {\r\n\r\n    // This is a functional component\r\n    const RenderDish = ({ dish }) => {                  \r\n        return dish !== null ?\r\n                <FadeTransform in transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%) '}} >\r\n                    <Card>\r\n                        <CardImg width=\"100%\" top src={baseURL + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle> {dish.name} </CardTitle>\r\n                            <CardText> {dish.description} </CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            : <div></div> \r\n    }\r\n\r\n    // This is a functional component\r\n    const ShowComments = ({ dish, postComment, dishId }) => {\r\n        return dish !== null ? <>\r\n            <h3>Comments</h3>\r\n                <ul className='list-unstyled'>\r\n                    <Stagger in>\r\n                        { dish.map(element => {\r\n                        return ( \r\n                            <Fade in>\r\n                                <li key={element.id}>\r\n                                    <p> {element.comment} </p>\r\n                                    <p>  -- {element.author} | {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse( element.date )) )} </p>\r\n                                </li>\r\n                            </Fade>\r\n                                ) \r\n                            }) \r\n                        }\r\n                    </Stagger>\r\n                </ul> \r\n                <SubmitComment text='Submit Comment' dishId={dishId} postComment={postComment}/>   \r\n        </> : <div></div>\r\n    }\r\n\r\n    const inputDish = sentDish.length !== 0 ? sentDish[0] : null ;    \r\n    const inputComments = comments.length !== 0 ? comments : null;\r\n\r\n    if(isLoading) {\r\n        return(\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <h4>{errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else \r\n    {\r\n    return ( \r\n        <div className='container'>\r\n            <div className='row'>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem> \r\n                        <Link to='/menu'>Menu</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active> \r\n                        { inputDish.name }\r\n                    </BreadcrumbItem>\r\n                </Breadcrumb>\r\n            </div>\r\n            <div className='row'>\r\n                <div className=\"col-12 col-md-5 m-2\" >\r\n                    <RenderDish dish={ inputDish } />\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-2\" >\r\n                    <ul className='list-unstyled'>\r\n                        <ShowComments dish={ inputComments } postComment={ postComment } dishId={ inputDish.id } />\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    )\r\n    }\r\n   \r\n    \r\n}\r\n\r\n\r\nexport default DishdetailComponent\r\n","import React, { useState } from 'react'\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Modal, ModalBody, ModalHeader, Button, Form, FormGroup, Label, Input } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst HeaderComponent = () => {\r\n\r\n    const [navOpen, setNavOpen] = useState(false)\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n\r\n    function toggleNav() {\r\n        setNavOpen(!navOpen)\r\n    }\r\n\r\n    function toggleModal() {\r\n        setModalOpen(!modalOpen)\r\n    }\r\n\r\n    function handleLogin(event) {\r\n        event.preventDefault();\r\n        console.log('Username: ',username,'Password:',password,'Remember: ',remember)\r\n        toggleModal()\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Navbar dark expand='md'>\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={toggleNav} />\r\n                    <NavbarBrand className='mr-auto'>\r\n                            <img src='assets/images/logo.png' alt='Ristorante Con Fusion' height='50' width='70' />\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={navOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className='nav-link' to='/react_website/home'>\r\n                                    <span className='fa fa-home fa-lg'></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className='nav-link' to='/react_website/aboutus'>\r\n                                    <span className='fa fa-info fa-lg'></span> About Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className='nav-link' to='/react_website/menu'>\r\n                                    <span className='fa fa-list fa-lg'></span> Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className='nav-link' to='/react_website/contactus'>\r\n                                    <span className='fa fa-address-card fa-lg'></span> Contact Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className='ml-auto'>\r\n                            <NavItem>\r\n                                <Button outline color='warning' onClick={toggleModal}>\r\n                                    <span className='fa fa-sign-in fa-lg'></span> Login\r\n                                </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>  \r\n            <Jumbotron>\r\n                <div className='container'>\r\n                    <div className='row row-header'>\r\n                        <div className='col-12 col-sm-6'>\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create\r\n                               a unique fusion experience. Our lipsmacking creations will tickle \r\n                               your culinary senses! </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={modalOpen} toggle={toggleModal} >\r\n                <ModalHeader toggle={toggleModal} >Login</ModalHeader>\r\n                <ModalBody><p>hello</p>\r\n                    <Form onSubmit={handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor='username'>Username:</Label>\r\n                            <Input type='text' id='username' name='username' \r\n                                    onChange={ (event) => setUsername(event.target.value) } />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor='password'>Password:</Label>\r\n                            <Input type='password' id='password' name='password' \r\n                                    onChange={ (event) => setPassword(event.target.value) } />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label check>\r\n                                <Input type='checkbox' name='remember'  \r\n                                    onChange={ (event) => setRemember(!remember) }  />\r\n                                Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type='submit' value='submit' color='primary'> Login </Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FooterComponent = () => {\r\n    return (\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li> <Link to='/home'>Home</Link> </li>\r\n                        <li> <Link to='/menu'>Menu</Link> </li>\r\n                        <li> <Link to='/aboutus'>About Us</Link> </li>\r\n                        <li> <Link to='/contactus'>Contact Us</Link> </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default FooterComponent\r\n","import React from 'react'\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap'\r\nimport Loading from './LoadingComponent'\r\nimport { baseURL } from '../shared/baseURL'\r\nimport { FadeTransform } from 'react-animation-components'\r\n\r\nconst HomeComponent = ({ dish, promotion, leader, dishesErrMess, dishesLoading, promosLoading, promosErrMess, leadersLoading, leadersErrMess }) => {\r\n\r\n    const RenderCard = ({ item, isLoading, errMess }) => {\r\n        if (isLoading) {\r\n            return(\r\n              <Loading />\r\n            )\r\n        }\r\n        else if(errMess) {\r\n            return (\r\n                <h3>{errMess}</h3>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <FadeTransform in transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%) '}} >\r\n                    <Card >\r\n                        <CardImg src={baseURL + item.image} alt={item.name} />\r\n                        <CardBody>\r\n                            <CardTitle> {item.name} </CardTitle>\r\n                            { item.designation ? <CardSubtitle> {item.designation} </CardSubtitle> : null }\r\n                            <CardText> {item.description} </CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row align-items-start'>\r\n                <div className='col-12 col-md m-2'>\r\n                    <RenderCard item = {dish} isLoading={ dishesLoading } errMess={ dishesErrMess } /> \r\n                </div>\r\n                <div className='col-12 col-md m-2'>\r\n                    <RenderCard item = {promotion} isLoading={ promosLoading } errMess={ promosErrMess }  /> \r\n                </div>\r\n                <div className='col-12 col-md m-2'>\r\n                    <RenderCard item = {leader} isLoading={ leadersLoading } errMess={ leadersErrMess} /> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeComponent\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport { baseURL } from \"../shared/baseURL\"\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\nconst AboutComponent = ({ leaders }) => {\r\n\r\n    const RenderLeader = ({ input }) => {\r\n        return (\r\n            <Fade in>\r\n                <Media key={input.id} className='mt-4'>\r\n                    <Media left middle>\r\n                        <Media object className='mr-5' src={baseURL + input.image} alt={input.name} />\r\n                    </Media>\r\n                    <Media body>\r\n                        <Media heading>\r\n                            { input.name }\r\n                        </Media>\r\n                        <p> {input.designation} </p>\r\n                        <p> {input.description} </p>\r\n                    </Media>\r\n                </Media>      \r\n            </Fade>         \r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            { leaders.map( (leader) => <RenderLeader input={leader}/> )}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutComponent;    ","import React, { Component } from 'react'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Row, Col} from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Control, Form, Errors, actions } from 'react-redux-form'\r\n// import { latest } from 'immer/dist/internal'\r\n\r\nconst required = (val) => val && val.length\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len)\r\nconst isNumber = (val) => !isNaN(Number(val))\r\nconst validEmail = (val) => /^[a-zA-Z0-9_.-]{1,}@[^.][a-zA-Z]{1,}[.][a-zA-Z.]{1,}$/i.test(val)\r\n\r\nclass ContactComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.resetFeedbackForm()\r\n        this.props.postFeedback( \r\n            values.firstname, \r\n            values.lastname, \r\n            values.email, \r\n            values.telnum, \r\n            values.agree, \r\n            values.contactType, \r\n            values.message )\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem> \r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active> \r\n                            Contact Us\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className='col-12'>\r\n                        <h3>Contact Us </h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>    \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://www.skype.com/en/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model='feedback' onSubmit={ (values) => this.handleSubmit(values) }>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors className='text-danger' model='.firstname' \r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors className='text-danger' model='.lastname' \r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }} />\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.input type='number' model=\".telnum\" id=\"telnum\" name=\"telnum\" maxLength='10'\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(10), isNumber\r\n                                        }} />\r\n                                    <Errors className='text-danger' model='.telnum' \r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Required! ',\r\n                                            minLength: 'Must be a 10 digits number',\r\n                                            isNumber: 'Must be a Number'\r\n                                        }} />\r\n                                </Col> \r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} />\r\n                                    <Errors className='text-danger' model='.email' \r\n                                            show='touched'\r\n                                            messages={{\r\n                                                required: 'Required! ',\r\n                                                validEmail: 'Must be a valid Email. For example: abc@gmail.com '\r\n                                            }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className='form-check'>\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className='form-check-input' /> \r\n                                            {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className='form-control' >\r\n                                            <option>Tel.</option>\r\n                                            <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className='form-control' />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ContactComponent\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent'\r\nimport DishdetailComponent from './DishdetailComponent'\r\nimport Header from './HeaderComponent'\r\nimport Footer from './FooterComponent'\r\nimport Home from './HomeComponent'\r\nimport About from './AboutComponent'\r\nimport Contact from './ContactComponent'\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { postComment, fetchComments, fetchDishes, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators'\r\nimport { actions } from 'react-redux-form'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders,\r\n    }    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: ( dishId, rating, author, comment ) => {dispatch( postComment( dishId, rating, author, comment ) ) },\r\n  postFeedback: ( firstname, lastname, email, telnum, agree, contactType ,message ) => { dispatch( postFeedback( firstname, lastname, email, telnum, agree, contactType ,message ) ) },\r\n  fetchDishes: () => { dispatch(fetchDishes() ) } ,\r\n  resetFeedbackForm: () => { dispatch( actions.reset('feedback') ) } ,\r\n  fetchComments: () => { dispatch( fetchComments() ) } ,\r\n  fetchPromos: () => { dispatch( fetchPromos() ) } ,\r\n  fetchLeaders: () => { dispatch( fetchLeaders() ) }\r\n})\r\n\r\nclass Main extends Component {\r\n\r\n    // onDishSelect(dishId) {\r\n    //     this.props.selectedDish === dishId ? this.setState({ selectedDish: null }) : this.setState({ selectedDish: dishId }) \r\n    // }\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchDishes()      // this function is called\r\n    this.props.fetchComments() \r\n    this.props.fetchPromos()  \r\n    this.props.fetchLeaders()\r\n  }\r\n\r\n  render() {\r\n    // Another method to pass props in Home component\r\n    const HomePage = () => {\r\n      return ( <Home dish={ this.props.dishes.dishes.filter( (check) => check.featured )[0] }\r\n                     dishesLoading={ this.props.dishes.isLoading }\r\n                     dishesErrMess={this.props.dishes.errorMessage }\r\n                     promosLoading={ this.props.promotions.isLoading }\r\n                     promosErrMess={this.props.promotions.errorMessage }\r\n                     promotion={ this.props.promotions.promotions.filter( (check) => check.featured )[0] }\r\n                     leader={ this.props.leaders.leaders.filter( (check) => check.featured )[0] } \r\n                     leadersLoading={ this.props.leaders.isLoading }\r\n                     leadersErrMess={ this.props.leaders.errorMessage }\r\n                /> )\r\n                \r\n    }\r\n\r\n    // Here match is a prop which is part of Route component just like history & location\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishdetailComponent sentDish={ this.props.dishes.dishes.filter( check => check.id === parseInt(match.params.dishId) )}\r\n          isLoading={ this.props.dishes.isLoading }\r\n          errMess={this.props.dishes.errorMessage } \r\n          commentsErrMess={this.props.comments.errorMessage } \r\n          comments={this.props.comments.comments.filter( check => check.dishId === parseInt(match.params.dishId) )}\r\n          postComment={ this.props.postComment } />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div >\r\n       <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>   \r\n             {/*  Here it is ClassNameS <-- in Csstransition component to apply to all children */}\r\n            <Switch location={this.props.location}>\r\n              <Route path='/react_website/home' component={ HomePage } />       \r\n              <Route exact path='/react_website/abc/aboutus' component={ () => <About leaders={this.props.leaders.leaders} /> } />\r\n              <Route exact path='/menu' component={ () => <Menu sentDishes={this.props.dishes} /> } />\r\n              <Route path='/react_website/menu/:dishId' component={ DishWithId } />\r\n              <Route exact path='/react_website/contactus' component={ () => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} /> } />\r\n              <Redirect to='/react_website/' />\r\n              {/* <Route path='/home' component={ HomePage } />       \r\n              <Route exact path='/aboutus' component={ () => <About leaders={this.props.leaders.leaders} /> } />\r\n              <Route exact path='/menu' component={ () => <Menu sentDishes={this.props.dishes} /> } />\r\n              <Route path='/menu/:dishId' component={ DishWithId } />\r\n              <Route exact path='/contactus' component={ () => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} /> } />\r\n              <Redirect to='/home' /> */}\r\n           \r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errorMessage: null,\r\n    dishes: []  \r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errorMessage: null, dishes: action.payload }\r\n            \r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errorMessage: null, dishes: [] }\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errorMessage: action.payload, dishes: [] }\r\n        default:\r\n            return state\r\n    }\r\n}","// import { COMMENTS } from '../shared/comments' \r\nimport * as ActionTypes from './ActionTypes'\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, isLoading: false, errorMessage: null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, isLoading: false, errorMessage: action.payload, comments: []}\r\n\r\n        case ActionTypes.ADD_COMMENT:  \r\n            var comment = action.payload\r\n            return {...state, comments: state.comments.concat(comment)}\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes'\r\n\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errorMessage: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errorMessage: null, leaders: action.payload }\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errorMessage: null, leaders: [] }\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errorMessage: action.payload, leaders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}","// import { PROMOTIONS } from '../shared/promotions'\r\nimport * as ActionTypes from './ActionTypes'\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errorMessage: null,\r\n    promotions: []  \r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errorMessage: null, promotions: action.payload}\r\n            \r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errorMessage: null, promos: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errorMessage: action.payload, promotions: []}\r\n        default:\r\n            return state\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    telnum: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n} ","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className='App'>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { createForms } from 'react-redux-form'\r\nimport { Dishes } from './dishes'\r\nimport { Comments } from './comments'\r\nimport { Leaders } from './leaders'\r\nimport { Promotions } from './promotions'\r\nimport thunk from 'redux-thunk'\r\nimport logger from \"redux-logger\"\r\nimport { InitialFeedback } from './forms'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport const ConfigureStore = () => {\r\n     const store = createStore( \r\n          combineReducers({\r\n               dishes : Dishes,\r\n               comments: Comments,\r\n               promotions: Promotions, \r\n               leaders: Leaders, \r\n               ...createForms({\r\n                    feedback: InitialFeedback\r\n               })\r\n          }), \r\n          composeWithDevTools(applyMiddleware(thunk, logger))\r\n      )\r\n     return store\r\n}\r\n\r\n\r\n// import {createStore} from 'redux';\r\n// import { Reducer, initialState } from './reducer'\r\n\r\n// export const ConfigureStore = () => {\r\n//     const store = createStore(\r\n//         Reducer, // reducer\r\n//         initialState, // our initialState\r\n//     );\r\n\r\n//     return store;\r\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}